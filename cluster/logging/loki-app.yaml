apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd # This is where ArgoCD Application objects live
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: loki
    targetRevision: "6.30.1" # Your specified Loki chart version (ensure this is for the main 'loki' chart)
    helm:
      values: |
        deploymentMode: SingleBinary

        singleBinary:
          replicas: 1
          persistence:
            enabled: true
            storageClass: "nfs-client"
            size: 50Gi

        loki:
          auth_enabled: false
          storage:
            type: filesystem
            # The filesystem sub-section under loki.storage already has defaults
            # like chunks_directory: /var/loki/chunks which the chart should use.
          schemaConfig: # This will be used by the chart's default loki.config template
            configs:
              - from: "2024-04-01"
                store: boltdb-shipper
                object_store: filesystem
                schema: v13
                index:
                  prefix: index_
                  period: 24h
          commonConfig: # This will be used by the chart's default loki.config template
            path_prefix: /var/loki # Ensures paths are relative to the PVC mount at /var/loki
            replication_factor: 1
          ingester: # Configures the ingester part of the default loki.config template
            lifecycler:
              address: 127.0.0.1
              ring:
                kvstore:
                  store: memberlist
                replication_factor: 1
              final_sleep: 0s
            # For WAL with boltdb-shipper, the chart's default config usually sets
            # wal:
            #   enabled: true
            #   dir: {{ .Values.loki.commonConfig.path_prefix }}/wal (or similar)
            # We rely on the chart's default loki.config template to set this up correctly now.
          limits_config: # <--- ADDED/CORRECTED THIS
            allow_structured_metadata: false

        # Ensure other modes are off
        write:
          replicas: 0
        read:
          replicas: 0
        backend:
          replicas: 0
        enterprise:
          enabled: false
        gateway:
          enabled: false
        ingress:
          enabled: false

  destination:
    server: https://kubernetes.default.svc
    namespace: logging # Install Loki here
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true