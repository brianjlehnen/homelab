apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd # This is where ArgoCD Application objects live
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: loki
    # Verify and use a current stable chart version for 'loki'.
    # For example, as of my last update, versions around 5.x were common for the 'loki' chart (not loki-distributed).
    # Let's use a placeholder, PLEASE VERIFY for your needs:
    targetRevision: "6.30.1"
    helm:
      values: |
        # Content from your values snippet, correctly indented:
        persistence:
          enabled: true
          storageClassName: "nfs-client"
          accessModes:
            - ReadWriteOnce
          size: 50Gi # Or desired size

        loki:
          # Ensure this is false if you are not using Loki's built-in auth
          auth_enabled: false

          # This 'config' block is crucial and maps to Loki's own config file.
          config:
            # Schema config is important for filesystem storage
            schema_config:
              configs:
                - from: "2024-04-01" # Use a recent "from" date for schema
                  store: boltdb-shipper # Common for filesystem backend
                  object_store: filesystem
                  schema: v13 # Or v12/v14 - check compatibility with your Loki & chart version
                  index:
                    prefix: index_
                    period: 24h
            
            # Storage config explicitly for filesystem
            storage_config:
              boltdb_shipper:
                active_index_directory: /data/loki/index    # Path *inside* the PVC
                cache_location: /data/loki/boltdb-cache # Path *inside* the PVC
                shared_store: filesystem # Important for boltdb-shipper with filesystem
              filesystem:
                directory: /data/loki/chunks # Path *inside* the PVC where log chunks are stored
        
        # Add any other top-level overrides from your values file here,
        # ensuring they are at the same indentation level as 'persistence:' and 'loki:'.
        # For example, to set resource requests/limits for the main loki component/container:
        # resources:
        #   limits:
        #     cpu: 1
        #     memory: 1Gi
        #   requests:
        #     cpu: 100m
        #     memory: 256Mi

        # If your chart requires explicitly setting a deployment mode for single binary with filesystem:
        # (This depends heavily on the chart's values.yaml structure)
        # Example:
        # deploymentMode: SingleBinary 
        # or
        # singleBinary:
        #   replicas: 1
        #   # ... other singleBinary specific settings

  destination:
    server: https://kubernetes.default.svc
    namespace: logging # Install Loki here
  syncPolicy:
    automated:
      prune: true
      selfHeal