apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd # This is where ArgoCD Application objects live
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: loki
    targetRevision: "6.30.1" # Your specified Loki chart version
    helm:
      values: |
        # This is the content for helm.values
        # It overrides specific keys in the chart's default values.yaml.
        # The chart then uses these to template its internal Loki config file.

        # 1. Set the deployment mode to SingleBinary
        deploymentMode: SingleBinary

        # 2. Configure and enable the singleBinary deployment target
        singleBinary:
          replicas: 1
          persistence:
            enabled: true
            storageClass: "nfs-client" # Your NFS StorageClass
            size: 50Gi                     # Desired size for Loki data on NFS
          # You can add resource requests/limits for the singleBinary pod here if needed:
          # resources:
          #   requests:
          #     cpu: "500m"
          #     memory: "1Gi"
          #   limits:
          #     cpu: "1"
          #     memory: "2Gi"

        # 3. Configure Loki itself by overriding specific values
        #    that the chart's default loki.config template will use.
        loki:
          auth_enabled: false

          # Override the chart's default storage type to filesystem
          storage:
            type: filesystem
            # The 'filesystem' sub-section under loki.storage has defaults in the chart
            # like chunks_directory: /var/loki/chunks. These should be used by the
            # chart's templated loki.config when type is filesystem.

          # Provide the schema configuration for filesystem with boltdb-shipper
          schemaConfig: # This will be used by the chart's default loki.config template
            configs:
              - from: "2024-