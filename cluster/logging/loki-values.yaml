# Values for grafana/loki Helm chart (e.g., version 6.30.1)
# Purpose: Configure Loki for SingleBinary deployment with filesystem persistence on NFS.

# 1. Set the deployment mode to SingleBinary
deploymentMode: SingleBinary

# 2. Configure and enable the singleBinary deployment target
singleBinary:
  replicas: 1
  # Persistence configuration for the singleBinary StatefulSet
  persistence:
    enabled: true
    storageClassName: "nfs-client" # Your NFS StorageClass
    size: 50Gi                     # Desired size for Loki data on NFS
    # accessModes defaults to ReadWriteOnce in the chart for singleBinary, which is fine.

loki:
  # Ensure auth is disabled for simplicity (default in the chart's loki.config template if enterprise is false)
  auth_enabled: false # This value is referenced by the chart's default loki.config template

  # Configure Loki's storage backend type to filesystem.
  # This setting is used by the chart's default templated loki.config string.
  storage:
    type: filesystem
    # The 'filesystem' sub-section here already has good defaults for paths like /var/loki/chunks
    # within the PVC. The commonConfig.path_prefix will define the root for these.

  # Provide the schema configuration for filesystem with boltdb-shipper.
  # This is also used by the chart's default templated loki.config string.
  schemaConfig:
    configs:
      - from: "2024-04-01" # Use a recent "from" date
        store: boltdb-shipper
        object_store: filesystem # Crucial for boltdb-shipper with filesystem
        schema: v13 # Ensure v13 is compatible with Loki image used in chart 6.30.1 (Loki image tag 3.5.0 in values)
        index:
          prefix: index_
          period: 24h
  
  # The chart's default loki.config string will use .Values.loki.commonConfig.
  # Set replication_factor to 1 for single binary mode.
  # path_prefix will be where Loki stores data *inside* its PVC.
  # The singleBinary persistence often mounts the PVC at /var/loki.
  commonConfig:
    path_prefix: /var/loki 
    replication_factor: 1 

  # The chart's default loki.config string will use .Values.loki.ingester values.
  # Configure ingester for single binary mode.
  ingester:
    # For singleBinary, lifecycler often uses 127.0.0.1 and memberlist
    lifecycler:
      address: 127.0.0.1 # Used by the single process for its ring
      ring:
        kvstore:
          store: memberlist
        replication_factor: 1
      final_sleep: 0s # For faster shutdown in single instance
    # WAL (Write Ahead Log) is important for boltdb-shipper.
    # The default loki.config template within the chart should enable this
    # when using boltdb-shipper. If not, it would be added to loki.config string override.
    # For now, relying on chart defaults for WAL when boltdb-shipper is active.

  # Optional: Define resource requests and limits for the singleBinary pod if needed
  # This would go under the 'singleBinary:' key, e.g., singleBinary.resources
  # resources:
  #   requests:
  #     cpu: "500m"
  #     memory: "1Gi"
  #   limits:
  #     cpu: "1"
  #     memory: "2Gi"

# Ensure enterprise features are off
enterprise:
  enabled: false

# Disable the chart's built-in gateway and ingress,
# as we would typically manage Loki's exposure via our main Nginx Ingress Controller if needed externally.
# For now, Loki will only be internally accessible within the cluster.
gateway:
  enabled: false
ingress:
  enabled: false

# The 'deploymentMode: SingleBinary' should ensure that other components like
# 'write', 'read', 'backend', 'distributor', 'querier', etc., are not deployed.
# If you find they are still being deployed, you might need to add explicit
# 'replicas: 0' or 'enabled: false' for those top-level keys.
# Example (only if needed):
# write:
#   replicas: 0
# read:
#   replicas: 0
# backend:
#   replicas: 0