apiVersion: v1
kind: ServiceAccount
metadata:
  name: homepage
  namespace: homepage # Changed from default
  labels:
    app.kubernetes.io/name: homepage
# secrets: # This 'secrets' field on SA is deprecated for auto-creating tokens.
#   - name: homepage # This Secret of type service-account-token is also often auto-created or not needed for mounting.
---
# Note: The explicit Secret for SA token is often not needed in modern K8s.
# The official manifest might be slightly dated here. Tokens are auto-mounted.
# We can omit this Secret resource for now unless proven necessary.
# If their example relies on it for some specific API binding, we can add it back.
# For now, let's assume the auto-mounted SA token is sufficient.
# ---
# apiVersion: v1
# kind: Secret
# type: kubernetes.io/service-account-token
# metadata:
#   name: homepage # SA token secret name
#   namespace: homepage # Changed from default
#   labels:
#     app.kubernetes.io/name: homepage
#   annotations:
#     kubernetes.io/service-account.name: homepage
# ---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: homepage-clusterrole # Renamed to avoid conflict if 'homepage' ClusterRole already exists for other purposes
  labels:
    app.kubernetes.io/name: homepage
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods", "nodes"]
    verbs: ["get", "list"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["nodes", "pods"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: homepage-clusterrolebinding # Renamed
  labels:
    app.kubernetes.io/name: homepage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: homepage-clusterrole # Matches new ClusterRole name
subjects:
  - kind: ServiceAccount
    name: homepage
    namespace: homepage # ServiceAccount is in the 'homepage' namespace